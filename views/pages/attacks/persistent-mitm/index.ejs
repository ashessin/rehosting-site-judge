<!DOCTYPE html>
<html lang="en">
<% include ../../../partials/head.ejs %>

<body>
<% include ../../../partials/nav.ejs %>
<main>
    <h1><%= title %></h1>
    <hr>
    <aside>
        <pre><%- JSON.stringify(parsedUrl, null, 2) %></pre>
    </aside>

    <kbd>service-worker</kbd>
    <div class="row">
        <div class="col">
            <label for="service-worker-path"></label>
            <input id="service-worker-path" name="path" type="text" placeholder="path">
            <label for="service-worker-scope"></label>
            <input id="service-worker-scope" name="scope" type="text" placeholder="scope">
        </div>
        <div class="col">
            <button onclick="registerServiceWorker()">Register</button>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <kbd>service-worker-status</kbd>
            <pre><code id="service-worker-status">unregistered</code></pre>
            <kbd>registered-service-worker</kbd>
            <pre><code id="registered-service-worker"></code></pre>
        </div>
    </div>
</main>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let defaultPath = window.location.href + ''

        if (defaultPath.includes('attack/persistent-mitm')) {
            defaultPath = defaultPath.replace('attack/persistent-mitm', '')
            defaultPath = defaultPath + 'bad-service-worker.js'
        } else if (defaultPath.includes(encodeURIComponent('attack/persistent-mitm'))) {
            defaultPath = defaultPath.replace(encodeURIComponent('attack/persistent-mitm'), '')
            defaultPath = defaultPath + encodeURIComponent('bad-service-worker.js')
        }

        document.getElementById('service-worker-path').value = defaultPath
        document.getElementById('service-worker-scope').value = '/'

        navigator.serviceWorker.getRegistrations().then(registrations => {
            registrations.forEach(registration => {
                if (registration.active !== null &&
                    registration.active.scriptURL.endsWith('bad-service-worker.js')) {
                    document.getElementById('service-worker-status').innerText = 'success'
                    document.getElementById('registered-service-worker').innerText = registration.scriptURL
                }
            })
        });


        registerServiceWorker()
    })

    function registerServiceWorker() {
        let path = document.getElementById('service-worker-path').value
        const scope = document.getElementById('service-worker-scope').value

        if ('serviceWorker' in navigator) {
            // Register a service worker hosted at the root of the
            // site using the provided scope.
            navigator.serviceWorker.register(path, {scope}).then(registration => {
                console.log('Service worker registration succeeded:', registration);
                document.getElementById('service-worker-status').innerText = 'success'
                document.getElementById('registered-service-worker').innerText = path
                return 1
            }, error => {
                console.log('Service worker registration failed:', error);
                document.getElementById('service-worker-status').innerText = 'failed'
                return 0
            });
        } else {
            console.log('Service workers are not supported.');
            return -1
        }
    }
</script>
</body>

</html>
